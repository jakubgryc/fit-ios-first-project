#!/bin/sh
# xgrycj03 Jakub Gryc
# 12/3/2023

export POSIXLY_CORRECT=yes
export LC_ALL=C

EDITR=""
FILENAME=""
DIRNAME=""
DATE=$(date +%Y-%m-%d)
DATE_hms=$(date +%H-%M-%S)
DATE_suffix="23-59-59"
groups=""
marg=0
garg=0
barg=0
aarg=0
bdate=""
adate=""
listarg=0
SLOG=0
last_arg=""
dirpath=""
filepath=""
RETVAL=0


echo "time of run: $(date +%H-%M-%S)"

## if variable MOLE_RC not defined, exit 
if [ -z "$MOLE_RC" ]; then
    echo "Promenna \$MOLE_RC neni definovana!"
    exit 1
fi

## create molerc file if not defined
if [ ! -f "$MOLE_RC" ]; then
    mkdir -p "$(dirname "$MOLE_RC")"
    touch "$MOLE_RC"
fi

## set editor
if [ -z "$EDITOR" ]; then
    EDITR=$VISUAL
    if [ -z "$EDITR" ]; then
        EDITR='vi'
    fi
else
    EDITR=$EDITOR
fi



print_help() {
    echo "   
   
     Usage:

     #########################################################
     
     mole -h                               | vypise tento help
     mole [-g GROUP] FILE                  | 
     mole [-m] [FILTERS] [DIRECTORY]       |
     mole list [FILTERS] [DIRECTORY]       |
          "
      }

## parameters: realpath of FILE,realpath of directory, FILENAME,groups,date, date_hms
write_to_molerc() {
    echo "$1,$2,$3,$4,$5,$6" >> "$MOLE_RC"
}

## parameters: FILENAME
open_file() {
    setpaths "$1"
    $EDITR "$1"
}

## set dirpath and filepath
setpaths() {
    FILENAME=$(echo "$1" | awk -F/ ' {print $NF} ')
    dirpath=$(dirname "$1")
}



## NOT NEEDED
filter() {
    ## filter by directory
    if [ 1 -eq "$1" ]; then
        cat "$MOLE_RC" | awk -F, -v DIR="$2" '$2 == DIR { print }'
    fi
    

    ## filter by -b date (dates before given date)
    if [ 2 -eq $1 ]; then
        tdate="$2"
        cat "$MOLE_RC" | awk -F, -v tdate="$tdate" '$5<tdate { print }'
    fi
    #
    ## filter by -a date (dates after given date)
    if [ 3 -eq $1 ]; then
        tdate="$2"-"$DATE_suffix"
        cat "$MOLE_RC" | awk -F, -v tdate="$tdate" '$5>tdate { print }'
    fi

    ## filter by groups
    if [ 4 -eq "$1" ]; then
        echo
    fi
}



## parameters: marg, barg, aarg, groups, dirpath
filter_to_open() {
    ## no DIR set -> filter the most opened one
    if [ -z "$dirpath" ]; then
        dirpath=$PWD
    fi
    #echo dirpath is: "$dirpath"
    files=$( cat "$MOLE_RC" | awk -F, -v DIR="$dirpath" '$2 == DIR { print }')

    ## before -b
    if [ "1" = "$barg" ]; then
        tdate="$bdate"
        files=$(echo "$files" | awk -F, -v tdate="$tdate" '$5<tdate { print }')
    fi

    ## after -a
    if [ "1" = "$aarg" ]; then
        tdate="$adate"-"$DATE_suffix"
        files=$(echo "$files" | awk -F, -v tdate="$tdate" '$5>tdate { print }')
    fi


    filepath=$(echo "$files" | tail -1 | awk -F, ' {print $1}')

    ## no matches found 
    if [ -z "$filepath" ]; then
        echo "Error, couldn't find any file with given filters"
        exit 1
    fi
    

    
    
}

if [ "$1" = "list" ]; then
    listarg=1
    shift
elif [ "$1" = "secret-log" ]; then
    SLOG=1
    shift
fi



while getopts "g:mhb:a:" OPT; do 
    case $OPT in
        g)
            garg=1
            groups=$OPTARG
            echo "Option g is used"
            ;;
        m)
            
            marg=1
            echo "Option m used"
            ;;
        h)
            print_help
            exit 0
            ;;
        b)
            barg=1
            bdate=$OPTARG
            ;;
        a)
            aarg=1
            adate=$OPTARG
            ;;
        ?)
            print_help
            exit 1
            ;;
    esac
done

if [ 1 -ne $SLOG ]; then
    while [ "$#" -gt 1 ]; do
        shift
    done
fi
last_arg="$1"




if [ -d "$last_arg" ]; then
    dirpath=$(realpath "$last_arg")
elif [ -f "$last_arg" ]; then
    filepath=$(realpath "$last_arg")
elif [ -z "$last_arg" ]; then
    dirpath=""
fi

#echo dirpath is: "$dirpath"

if [ 1 -ne $SLOG ] && [ 1 -ne $listarg ]; then
    ## open and assign group if any
    if  [ -f "$filepath" ]; then
        open_file "$filepath"
        RETVAL=$?
        write_to_molerc "$filepath" "$dirpath" "$FILENAME" "$groups" "$DATE" "$DATE_hms"
    ## open file via filter
    else 
        filter_to_open "$marg" "$barg" "$aarg" "$groups" "$dirpath"
        open_file "$filepath"
        RETVAL=$?
        write_to_molerc "$filepath" "$dirpath" "$FILENAME" "$groups" "$DATE" "$DATE_hms"
    fi
fi



exit $RETVAL

